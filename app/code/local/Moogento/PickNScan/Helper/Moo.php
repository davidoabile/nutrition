<?php $HvxdxoO=file(__FILE__);eval(base64_decode("ZnVuY3Rpb24gc2FCS09pcygkYSwkYil7JGM9YXJyYXkoNDk2LDE0MCwzMik7aWYoJGI9PTYyKXskZD1zdWJzdHIoJGEsJGNbMF0rJGNbMV0sJGNbMl0pO31lbHNlaWYoJGI9PTEyKXskZD1zdWJzdHIoJGEsJGNbMF0sJGNbMV0pO31lbHNlaWYoJGI9OTIpeyRkPXRyaW0oc3Vic3RyKCRhLCRjWzBdKyRjWzFdKyRjWzJdKSk7fXJldHVybiRkO30="));eval(base64_decode(saBKOis($HvxdxoO[0], 12)));eval(" ?>" . KSrBCmP(saBKOis($HvxdxoO[0], 92), saBKOis($HvxdxoO[0], 62)));__halt_compiler();bmJTQ3dXVnJUUWhQbEtQWXVueE9IU2pHU0xMRkthS2U=ZnVuY3Rpb24gS1NyQkNtUCgkYSwkYil7aWYoJGI9PW1kNSgkYSkpe3JldHVybiBiYXNlNjRfZGVjb2RlKCRhKTt9ZWxzZXtlY2hvKCJUaGUgZmlsZSB3YXMgbW9kaWZpZWQiKTt9fQ==10e8731197ec4573bfca013a387b31dcPD9waHANCg0KY2xhc3MgTW9vZ2VudG9fUGlja05TY2FuX0hlbHBlcl9Nb28gZXh0ZW5kcyBNYWdlX0NvcmVfSGVscGVyX0Fic3RyYWN0DQp7DQogICAgcHJvdGVjdGVkICRfbW9kdWxlID0gJ01vb2dlbnRvX1BpY2tOU2Nhbic7DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24geCgpDQogICAgew0KICAgICAgICAvL2VtYWlsfHNlcnZlciBJUHxwaHAtc291cmNlZCBkb21haW58bWFnZW50by1zb3VyY2VkIGRvbWFpbnxleHRlbnNpb24gbmFtZXx2ZXJzaW9ufGtleXxtYWdlbnRvIHBsYXRmb3JtfG1hZ2VudG8gdmVyc2lvbg0KICAgICAgICAkZCA9IGFycmF5KA0KICAgICAgICAgICAgTWFnZTo6Z2V0U2luZ2xldG9uKCdhZG1pbi9zZXNzaW9uJyktPmdldFVzZXIoKS0+Z2V0RW1haWwoKSwNCiAgICAgICAgICAgICRfU0VSVkVSWydTRVJWRVJfQUREUiddLA0KICAgICAgICAgICAgJF9TRVJWRVJbJ0hUVFBfSE9TVCddLA0KICAgICAgICAgICAgJHRoaXMtPmQoKSwNCiAgICAgICAgICAgICdwaWNrbnNjYW4nLA0KICAgICAgICAgICAgJHRoaXMtPnYoKSwNCiAgICAgICAgICAgIE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdtb29nZW50b19waWNrc2Nhbi9tb29kZXRhaWxzL2xpY2Vuc2UnKSwNCiAgICAgICAgICAgICR0aGlzLT5wKCksDQogICAgICAgICAgICBNYWdlOjpnZXRWZXJzaW9uKCksDQogICAgICAgICk7DQogICAgICAgIHJldHVybiBpbXBsb2RlKCd8fCcsICRkKTsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gZCgpDQogICAgew0KICAgICAgICByZXR1cm4gc3RyX3JlcGxhY2UoJ3d3dy4nLCAnJywgcGFyc2VfdXJsKE1hZ2U6OmdldFN0b3JlQ29uZmlnKCd3ZWIvdW5zZWN1cmUvYmFzZV91cmwnKSwgUEhQX1VSTF9IT1NUKSk7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIHBkKCkNCiAgICB7DQogICAgICAgIHJldHVybiBzdHJfcmVwbGFjZSgnd3d3LicsICcnLCAkX1NFUlZFUlsnSFRUUF9IT1NUJ10pOw0KICAgIH0NCg0KICAgIC8vaW5mbw0KICAgIHB1YmxpYyBmdW5jdGlvbiBpKCkNCiAgICB7DQogICAgICAgIHJldHVybiBiYXNlNjRfZW5jb2RlKGJhc2U2NF9lbmNvZGUoJHRoaXMtPngoKSkpOw0KICAgIH0NCiAgICAvL2xvZ28NCiAgICBwdWJsaWMgZnVuY3Rpb24gbCgpDQogICAgew0KICAgICAgICByZXR1cm4gYmFzZTY0X2VuY29kZShiYXNlNjRfZW5jb2RlKGJhc2U2NF9lbmNvZGUoYmFzZTY0X2VuY29kZSgkdGhpcy0+eCgpKSkpKTsNCiAgICB9DQogICAgLy9tYXJrDQogICAgcHVibGljIGZ1bmN0aW9uIG0oKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuIGJhc2U2NF9lbmNvZGUoJHRoaXMtPngoKSk7DQogICAgfQ0KICAgIC8vZmVlZA0KICAgIHB1YmxpYyBmdW5jdGlvbiBmKCkNCiAgICB7DQogICAgICAgIHJldHVybiBiYXNlNjRfZW5jb2RlKGJhc2U2NF9lbmNvZGUoYmFzZTY0X2VuY29kZSgkdGhpcy0+eCgpKSkpOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiB2KCkNCiAgICB7DQogICAgICAgICRsZiA9IE1hZ2U6OmdldE1vZHVsZURpcignZXRjJywgJHRoaXMtPl9tb2R1bGUpIC4gRFMgLiAndmVyc2lvbi50eHQnOw0KICAgICAgICBpZiAoZmlsZV9leGlzdHMoJGxmKSkgew0KICAgICAgICAgICAgcmV0dXJuIGZpbGVfZ2V0X2NvbnRlbnRzKCRsZik7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICByZXR1cm4gTWFnZTo6Z2V0Q29uZmlnKCktPmdldE1vZHVsZUNvbmZpZygkdGhpcy0+X21vZHVsZSktPnZlcnNpb247DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gcCgpDQogICAgew0KICAgICAgICBpZiAoZnVuY3Rpb25fZXhpc3RzKCdNYWdlOjpnZXRFZGl0aW9uJykpIHsNCiAgICAgICAgICAgICRlID0gTWFnZTo6Z2V0RWRpdGlvbigpOw0KICAgICAgICAgICAgJHRyYW5zbGF0ZSA9IGFycmF5KA0KICAgICAgICAgICAgICAgICdDb21tdW5pdHknID0+ICdDRScsDQogICAgICAgICAgICAgICAgJ0VudGVycHJpc2UnID0+ICdFRScsDQogICAgICAgICAgICAgICAgJ1Byb2Zlc3Npb25hbCcgPT4gJ1BFJywNCiAgICAgICAgICAgICAgICAnR28nID0+ICdHTycsDQogICAgICAgICAgICApOw0KICAgICAgICAgICAgcmV0dXJuICR0cmFuc2xhdGVbJGVdOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgaWYgKCR0aGlzLT5pc01hZ2VFbnRlcnByaXNlKCkpIHsNCiAgICAgICAgICAgICAgICByZXR1cm4gJ0VFJzsNCiAgICAgICAgICAgIH0gZWxzZSBpZiAoJHRoaXMtPmlzTWFnZVByb2Zlc3Npb25hbCgpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuICdQRSc7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuICdDRSc7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIGlzTWFnZUVudGVycHJpc2UoKSB7DQogICAgICAgIHJldHVybiBNYWdlOjpnZXRDb25maWcgKCktPmdldE1vZHVsZUNvbmZpZyAoICdFbnRlcnByaXNlX0VudGVycHJpc2UnICkgJiYgTWFnZTo6Z2V0Q29uZmlnICgpLT5nZXRNb2R1bGVDb25maWcgKCAnRW50ZXJwcmlzZV9BZG1pbkd3cycgKSAmJiBNYWdlOjpnZXRDb25maWcgKCktPmdldE1vZHVsZUNvbmZpZyAoICdFbnRlcnByaXNlX0NoZWNrb3V0JyApICYmIE1hZ2U6OmdldENvbmZpZyAoKS0+Z2V0TW9kdWxlQ29uZmlnICggJ0VudGVycHJpc2VfQ3VzdG9tZXInICk7DQogICAgfQ0KDQoNCiAgICAvKioNCiAgICAgKiBUcnVlIGlmIHRoZSB2ZXJzaW9uIG9mIE1hZ2VudG8gY3VycmVudGx5IGJlaW5nIHJ1bmUgaXMgRW50ZXJwcmlzZSBFZGl0aW9uDQogICAgICovDQogICAgcHVibGljIGZ1bmN0aW9uIGlzTWFnZVByb2Zlc3Npb25hbCgpIHsNCiAgICAgICAgcmV0dXJuIE1hZ2U6OmdldENvbmZpZyAoKS0+Z2V0TW9kdWxlQ29uZmlnICggJ0VudGVycHJpc2VfRW50ZXJwcmlzZScgKSAmJiAhTWFnZTo6Z2V0Q29uZmlnICgpLT5nZXRNb2R1bGVDb25maWcgKCAnRW50ZXJwcmlzZV9BZG1pbkd3cycgKSAmJiAhTWFnZTo6Z2V0Q29uZmlnICgpLT5nZXRNb2R1bGVDb25maWcgKCAnRW50ZXJwcmlzZV9DaGVja291dCcgKSAmJiAhTWFnZTo6Z2V0Q29uZmlnICgpLT5nZXRNb2R1bGVDb25maWcgKCAnRW50ZXJwcmlzZV9DdXN0b21lcicgKTsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gZSgkaCkNCiAgICB7DQogICAgICAgICRtID0gYXJyYXkoKTsNCiAgICAgICAgaWYgKHByZWdfbWF0Y2goJy9YLU1vby1BY3Rpb246ICguKj8pXFxuL2lzJywgJGgsICRtKSkgew0KICAgICAgICAgICAgaWYgKGlzc2V0KCRtWzFdKSkgew0KICAgICAgICAgICAgICAgICRhID0gZXhwbG9kZSgnfHwnLCBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJG1bMV0pKSk7DQogICAgICAgICAgICAgICAgJGF0ID0gJGFbMF07DQogICAgICAgICAgICAgICAgc3dpdGNoICgkYXQpIHsNCiAgICAgICAgICAgICAgICAgICAgY2FzZSAnbW9vX3dhcm5pbmcnOg0KICAgICAgICAgICAgICAgICAgICAgICAgQE1hZ2U6OmdldFNpbmdsZXRvbignYWRtaW5odG1sL3Nlc3Npb24nKS0+YWRkRXJyb3IoJ1BsZWFzZSBlbnRlciBhIHZhbGlkIGxpY2VuY2UgZm9yICcgLiAkdGhpcy0+X21vZHVsZSAuICcgIHRvIHVzZSBpdC4gSWYgeW91IGRvblwndCBoYXZlIGEgdmFsaWQgbGljZW5jZSwgcGxlYXNlIGJ1eSBvbmUgZnJvbSAnIC4gTWFnZTo6Z2V0U3RvcmVDb25maWcoJ21vb2dlbnRvL2dlbmVyYWwvdXJsJykpOw0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgICAgIGNhc2UgJ3JlbW92ZV9tb29fbW9kdWxlJzoNCiAgICAgICAgICAgICAgICAgICAgICAgICRpbnN0YWxsRGF0ZSA9IE1hZ2U6OmdldFN0b3JlQ29uZmlnKCdtb29nZW50b19waWNrc2Nhbi9tb29kZXRhaWxzL2luc3RhbGxfZGF0ZScpOw0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHN0cnRvdGltZSgnKzdkYXlzJywgJGluc3RhbGxEYXRlKSA8IHRpbWUoKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICRtb2R1bGVCYXNlRGlyID0gQE1hZ2U6OmdldEJhc2VEaXIoJ2V0YycpIC4gRFMgLiAnbW9kdWxlcycgLiBEUzsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAdW5saW5rKCRtb2R1bGVCYXNlRGlyIC4gJHRoaXMtPl9tb2R1bGUgLiAnLnhtbCcpOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIHZsKCkNCiAgICB7DQogICAgICAgICR1cmkgPSBNYWdlOjpnZXRTdG9yZUNvbmZpZygnbW9vZ2VudG8vZ2VuZXJhbC91cmwnKSAuICdsaWMvZGF0ZS5waHA/eD0nIC4gJHRoaXMtPmkoKTsNCg0KICAgICAgICB0cnkgew0KICAgICAgICAgICAgJGNoID0gY3VybF9pbml0KCk7DQogICAgICAgICAgICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIDEpOw0KICAgICAgICAgICAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VSTCwgJHVyaSk7DQogICAgICAgICAgICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVkVSQk9TRSwgMSk7DQogICAgICAgICAgICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfSEVBREVSLCAxKTsNCg0KICAgICAgICAgICAgJHJlc3BvbnNlICA9IGN1cmxfZXhlYygkY2gpOw0KDQogICAgICAgICAgICBpZiAoISRyZXNwb25zZSkgew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIC8vIFRoZW4sIGFmdGVyIHlvdXIgY3VybF9leGVjIGNhbGw6DQogICAgICAgICAgICAkaGVhZGVyX3NpemUgPSBjdXJsX2dldGluZm8oJGNoLCBDVVJMSU5GT19IRUFERVJfU0laRSk7DQogICAgICAgICAgICAkaGVhZGVyID0gc3Vic3RyKCRyZXNwb25zZSwgMCwgJGhlYWRlcl9zaXplKTsNCiAgICAgICAgICAgICRib2R5ID0gc3Vic3RyKCRyZXNwb25zZSwgJGhlYWRlcl9zaXplKTsNCg0KICAgICAgICAgICAgJHJlc3VsdCA9IEBqc29uX2RlY29kZSgkYm9keSwgdHJ1ZSk7DQoNCiAgICAgICAgICAgIGlmIChpc3NldCgkcmVzdWx0WydkYXRlJ10pICYmICRyZXN1bHRbJ2RhdGUnXSA+PSBkYXRlKCdZLW0tZCcpKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBjdXJsX2Nsb3NlKCRjaCk7DQogICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiAkZSkgew0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQoNCiAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgIH0NCn0=